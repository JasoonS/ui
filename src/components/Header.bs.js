// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as Css from "bs-css-emotion/src/Css.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Styles$WildCards from "../Styles.bs.js";
import * as RootProvider$WildCards from "../harberger-lib/RootProvider.bs.js";
import * as WildcardsLogo$WildCards from "../img/logos/WildcardsLogo.bs.js";

var hambergerMenu = Curry._1(Css.style, /* :: */[
      Css.display(/* none */-922086728),
      /* :: */[
        Css.textAlign(/* center */98248149),
        /* :: */[
          Css.media("(max-width: 1126px)", /* :: */[
                Css.display(/* block */888960333),
                /* [] */0
              ]),
          /* [] */0
        ]
      ]
    ]);

var fullScreenMenu = Curry._1(Css.style, /* :: */[
      Css.display(/* block */888960333),
      /* :: */[
        Css.textAlign(/* center */98248149),
        /* :: */[
          Css.media("(max-width: 1126px)", /* :: */[
                Css.display(/* none */-922086728),
                /* [] */0
              ]),
          /* [] */0
        ]
      ]
    ]);

var headerNav = Curry._1(Css.style, /* :: */[
      Css.textDecoration(Css.none),
      /* :: */[
        Css.marginRight(Css.em(2)),
        /* [] */0
      ]
    ]);

var navItemStyles = Curry._1(Css.style, /* :: */[
      Css.display(/* inlineBlock */-147785676),
      /* :: */[
        Css.margin2(Css.px(0), Css.rem(0.8)),
        /* :: */[
          Css.borderBottom(Css.px(1), /* solid */12956715, /* transparent */582626130),
          /* :: */[
            Css.selector(":hover", /* :: */[
                  Css.borderBottom(Css.px(1), /* solid */12956715, Styles$WildCards.wildCardGreen),
                  /* [] */0
                ]),
            /* :: */[
              Css.selector("a", /* :: */[
                    Css.fontStyle(/* italic */107228912),
                    /* :: */[
                      Css.fontSize(Css.rem(1.4)),
                      /* :: */[
                        Css.color(Styles$WildCards.wildCardGreen),
                        /* :: */[
                          Css.fontWeight(/* `num */[
                                5496390,
                                200
                              ]),
                          /* :: */[
                            Css.selector(":hover", /* :: */[
                                  Css.borderBottom(Css.px(1), /* solid */12956715, /* transparent */582626130),
                                  /* [] */0
                                ]),
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]),
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

function floatingMenu(shouldDisplay) {
  return Curry._1(Css.style, /* :: */[
              Css.position(/* fixed */10615156),
              /* :: */[
                Css.top(Css.px(0)),
                /* :: */[
                  Css.left(Css.px(0)),
                  /* :: */[
                    Css.width(/* `percent */[
                          -119887163,
                          100
                        ]),
                    /* :: */[
                      Css.height(Css.vh(100)),
                      /* :: */[
                        Css.visibility(shouldDisplay ? /* visible */589592690 : /* hidden */-862584982),
                        /* :: */[
                          Css.backgroundColor(Css.rgba(255, 255, 255, shouldDisplay ? 0.5 : 0)),
                          /* :: */[
                            Css.display(/* flex */-1010954439),
                            /* :: */[
                              Css.alignItems(/* center */98248149),
                              /* :: */[
                                Css.justifyContent(/* center */98248149),
                                /* :: */[
                                  Css.overflow(/* hidden */-862584982),
                                  /* :: */[
                                    Css.zIndex(1000),
                                    /* :: */[
                                      Css.transition(600, 0, Css.ease, "all"),
                                      /* :: */[
                                        Css.selector(".zoom-in-effect", /* :: */[
                                              Css.background(Css.rgba(107, 173, 62, 0.3)),
                                              /* :: */[
                                                Css.width(Css.vw(100)),
                                                /* :: */[
                                                  Css.height(Css.vh(100)),
                                                  /* :: */[
                                                    Css.borderRadius(/* `percent */[
                                                          -119887163,
                                                          50
                                                        ]),
                                                    /* :: */[
                                                      Css.border(Css.px(1), /* solid */12956715, Styles$WildCards.wildCardGreen),
                                                      /* :: */[
                                                        Css.display(/* flex */-1010954439),
                                                        /* :: */[
                                                          Css.flex(/* none */-922086728),
                                                          /* :: */[
                                                            Css.alignItems(/* center */98248149),
                                                            /* :: */[
                                                              Css.justifyContent(/* center */98248149),
                                                              /* :: */[
                                                                Css.transform(shouldDisplay ? Css.scale(1, 1) : Css.scale(0, 0)),
                                                                /* :: */[
                                                                  Css.transition(300, 0, Css.ease, "all"),
                                                                  /* [] */0
                                                                ]
                                                              ]
                                                            ]
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                ]
                                              ]
                                            ]),
                                        /* [] */0
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function hamburgerSvg(param) {
  return React.createElement("svg", {
              className: Curry._1(Css.style, /* :: */[
                    Css.zIndex(1001),
                    /* :: */[
                      Css.transition(500, 0, Css.ease, "transform"),
                      /* :: */[
                        Css.selector(":hover", /* :: */[
                              Css.transform(Css.rotate(Css.deg(180))),
                              /* [] */0
                            ]),
                        /* [] */0
                      ]
                    ]
                  ]),
              id: "Layer_1",
              height: "32px",
              width: "32px",
              fill: "#555555",
              version: "1.1"
            }, React.createElement("path", {
                  d: "M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z"
                }));
}

function closeSvg(param) {
  return React.createElement("svg", {
              className: Curry._1(Css.style, /* :: */[
                    Css.zIndex(1002),
                    /* :: */[
                      Css.transition(500, 0, Css.ease, "transform"),
                      /* :: */[
                        Css.selector(":hover", /* :: */[
                              Css.transform(Css.rotate(Css.deg(180))),
                              /* [] */0
                            ]),
                        /* [] */0
                      ]
                    ]
                  ]),
              height: "32px",
              width: "32px",
              fill: "#222222",
              viewBox: "0 0 512 512"
            }, React.createElement("path", {
                  d: "M437.5,386.6L306.9,256l130.6-130.6c14.1-14.1,14.1-36.8,0-50.9c-14.1-14.1-36.8-14.1-50.9,0L256,205.1L125.4,74.5  c-14.1-14.1-36.8-14.1-50.9,0c-14.1,14.1-14.1,36.8,0,50.9L205.1,256L74.5,386.6c-14.1,14.1-14.1,36.8,0,50.9  c14.1,14.1,36.8,14.1,50.9,0L256,306.9l130.6,130.6c14.1,14.1,36.8,14.1,50.9,0C451.5,423.4,451.5,400.6,437.5,386.6z"
                }));
}

function Header(Props) {
  var navItems = Props.navItems;
  var match = React.useState((function () {
          return false;
        }));
  var setIsOpen = match[1];
  var isOpen = match[0];
  var menuItems = function (isMobile) {
    return React.createElement("ul", {
                className: isMobile ? Curry._1(Css.style, /* :: */[
                        Css.display(/* flex */-1010954439),
                        /* :: */[
                          Css.flexDirection(/* column */-963948842),
                          /* :: */[
                            Css.alignItems(/* center */98248149),
                            /* :: */[
                              Css.padding(Css.px(0)),
                              /* :: */[
                                Css.margin(Css.px(0)),
                                /* [] */0
                              ]
                            ]
                          ]
                        ]
                      ]) : Styles$WildCards.navList
              }, Belt_Array.mapWithIndex(navItems, (function (index, param) {
                      if (param.shouldDisplay && !isMobile || param.shouldDisplayMobile && isMobile) {
                        return React.createElement("li", {
                                    key: String(index),
                                    className: Cn.make(/* :: */[
                                          Cn.ifTrue(navItemStyles, isMobile),
                                          /* :: */[
                                            Cn.ifTrue(Curry._1(Css.style, /* :: */[
                                                      Css.backgroundColor(Css.white),
                                                      /* :: */[
                                                        Css.borderBottom(Css.px(1), /* solid */12956715, Styles$WildCards.wildCardGreen),
                                                        /* :: */[
                                                          Css.display(/* block */888960333),
                                                          /* :: */[
                                                            Css.width(/* `percent */[
                                                                  -119887163,
                                                                  100
                                                                ]),
                                                            /* :: */[
                                                              Css.selector(":hover", /* :: */[
                                                                    Css.backgroundColor(Styles$WildCards.wildCardBlue),
                                                                    /* [] */0
                                                                  ]),
                                                              /* :: */[
                                                                Css.selector(":focus", /* :: */[
                                                                      Css.backgroundColor(Styles$WildCards.wildCardBlue),
                                                                      /* [] */0
                                                                    ]),
                                                                /* :: */[
                                                                  Css.selector(":active", /* :: */[
                                                                        Css.backgroundColor(Styles$WildCards.wildCardGreen),
                                                                        /* :: */[
                                                                          Css.selector("a", /* :: */[
                                                                                Css.color(Css.white),
                                                                                /* [] */0
                                                                              ]),
                                                                          /* [] */0
                                                                        ]
                                                                      ]),
                                                                  /* :: */[
                                                                    Css.selector(" > *", /* :: */[
                                                                          Css.display(/* block */888960333),
                                                                          /* :: */[
                                                                            Css.width(/* auto */-1065951377),
                                                                            /* :: */[
                                                                              Css.padding(Css.em(2)),
                                                                              /* [] */0
                                                                            ]
                                                                          ]
                                                                        ]),
                                                                    /* [] */0
                                                                  ]
                                                                ]
                                                              ]
                                                            ]
                                                          ]
                                                        ]
                                                      ]
                                                    ]), isMobile),
                                            /* [] */0
                                          ]
                                        ])
                                  }, Curry._2(param.component, (function (param) {
                                          return Curry._1(setIsOpen, (function (param) {
                                                        return false;
                                                      }));
                                        }), isMobile));
                      } else {
                        return null;
                      }
                    })));
  };
  var clearAndPush = RootProvider$WildCards.useClearNonUrlStateAndPushRoute(undefined);
  return React.createElement("header", {
              className: Styles$WildCards.header
            }, React.createElement("div", {
                  className: Styles$WildCards.navBox
                }, React.createElement("a", {
                      className: Cn.make(/* :: */[
                            Styles$WildCards.clickableLink,
                            /* :: */[
                              Curry._1(Css.style, /* :: */[
                                    Css.marginLeft(/* `px */[
                                          25096,
                                          80
                                        ]),
                                    /* :: */[
                                      Css.zIndex(1001),
                                      /* [] */0
                                    ]
                                  ]),
                              /* [] */0
                            ]
                          ]),
                      onClick: (function ($$event) {
                          $$event.preventDefault();
                          return Curry._1(clearAndPush, "#");
                        })
                    }, React.createElement("div", {
                          className: Styles$WildCards.headerLogo
                        }, React.createElement(WildcardsLogo$WildCards.make, {
                              maxWidth: "258px"
                            }))), React.createElement("nav", {
                      className: Cn.make(/* :: */[
                            headerNav,
                            /* :: */[
                              fullScreenMenu,
                              /* [] */0
                            ]
                          ])
                    }, menuItems(false)), React.createElement("nav", {
                      className: Cn.make(/* :: */[
                            headerNav,
                            /* :: */[
                              hambergerMenu,
                              /* [] */0
                            ]
                          ])
                    }, React.createElement("div", {
                          className: Curry._1(Css.style, /* :: */[
                                Css.zIndex(1010),
                                /* :: */[
                                  Css.position(/* absolute */-1013592457),
                                  /* :: */[
                                    Css.top(Css.px(0)),
                                    /* :: */[
                                      Css.right(Css.px(0)),
                                      /* :: */[
                                        Css.padding(Css.px(30)),
                                        /* [] */0
                                      ]
                                    ]
                                  ]
                                ]
                              ]),
                          onClick: (function (param) {
                              return Curry._1(setIsOpen, (function (isOpen) {
                                            return !isOpen;
                                          }));
                            })
                        }, isOpen ? React.createElement(React.Fragment, undefined, closeSvg(undefined)) : hamburgerSvg(undefined)), React.createElement("div", {
                          className: floatingMenu(isOpen)
                        }, React.createElement("div", {
                              className: "zoom-in-effect"
                            }, menuItems(true))))));
}

var make = Header;

export {
  hambergerMenu ,
  fullScreenMenu ,
  headerNav ,
  navItemStyles ,
  floatingMenu ,
  hamburgerSvg ,
  closeSvg ,
  make ,
  
}
/* hambergerMenu Not a pure module */
