// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as RimbleUi from "rimble-ui";
import * as Styles$WildCards from "../../Styles.bs.js";
import * as Globals$WildCards from "../../harberger-lib/Globals.bs.js";
import * as Web3Utils$WildCards from "../../harberger-lib/Web3Utils.bs.js";
import * as RootProvider$WildCards from "../../harberger-lib/RootProvider.bs.js";
import * as WildcardsLoader$WildCards from "../StaticContent/WildcardsLoader.bs.js";

function TxTemplate(Props) {
  var children = Props.children;
  var txState = Props.txState;
  var closeButtonText = Props.closeButtonText;
  var chain = Props.chain;
  var etherscanUrl = RootProvider$WildCards.useEtherscanUrl(undefined);
  var sidechainUrl = RootProvider$WildCards.useSidechainEtherscanUrl(undefined);
  var clearNonUrlState = RootProvider$WildCards.useClearNonUrlState(undefined);
  var isSideChainTx = chain === 1;
  var txExplererUrl = isSideChainTx ? sidechainUrl : etherscanUrl;
  if (typeof txState === "number") {
    switch (txState) {
      case /* UnInitialised */0 :
          return children;
      case /* SignMetaTx */1 :
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: null
                        }, Globals$WildCards.restr("Please sign the message to submit this transaction."), React.createElement(WildcardsLoader$WildCards.make, { })), React.createElement(RimbleUi.Flex, {
                          children: React.createElement(RimbleUi.Loader, {
                                size: "80px"
                              }),
                          justifyContent: "center"
                        }));
      case /* Created */2 :
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: null
                        }, Globals$WildCards.restr("Processing Transaction "), React.createElement(WildcardsLoader$WildCards.make, { })), React.createElement(RimbleUi.Text, {
                          children: Globals$WildCards.restr("Tx created.")
                        }), React.createElement(RimbleUi.Flex, {
                          children: React.createElement(RimbleUi.Loader, {
                                size: "80px"
                              }),
                          justifyContent: "center"
                        }));
      case /* SubmittedMetaTx */3 :
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: null
                        }, Globals$WildCards.restr("Transaction Submitted "), React.createElement(WildcardsLoader$WildCards.make, { })), React.createElement(RimbleUi.Text, {
                          children: Globals$WildCards.restr("Awaiting transaction details.")
                        }), React.createElement(RimbleUi.Flex, {
                          children: React.createElement(RimbleUi.Loader, {
                                size: "80px"
                              }),
                          justifyContent: "center"
                        }));
      case /* Failed */4 :
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: null
                        }, Globals$WildCards.restr("The transaction failed."), React.createElement(WildcardsLoader$WildCards.make, { })), React.createElement(RimbleUi.Text, {
                          children: Globals$WildCards.restr("It is possible that someone else bought the token before you, or the price changed. If you are unsure please feel free to contact our support.")
                        }), children);
      
    }
  } else {
    switch (txState.tag | 0) {
      case /* DaiPermit */0 :
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: null
                        }, Globals$WildCards.restr("Please sign the message to allow use of " + (Web3Utils$WildCards.fromWeiBNToEthPrecision(txState[0], 2) + " DAI.")), React.createElement(WildcardsLoader$WildCards.make, { })), React.createElement(RimbleUi.Flex, {
                          children: React.createElement(RimbleUi.Loader, {
                                size: "80px"
                              }),
                          justifyContent: "center"
                        }));
      case /* SignedAndSubmitted */1 :
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: null
                        }, Globals$WildCards.restr("Processing Transaction "), React.createElement(WildcardsLoader$WildCards.make, { })), React.createElement(RimbleUi.Text, {
                          children: React.createElement("a", {
                                href: "https://" + (String(txExplererUrl) + ("/tx/" + (String(txState[0]) + ""))),
                                rel: "noopener noreferrer",
                                target: "_blank"
                              }, Globals$WildCards.restr("View the transaction on " + txExplererUrl))
                        }), React.createElement(RimbleUi.Loader, {
                          className: Styles$WildCards.centerItems,
                          size: "80px"
                        }));
      case /* Declined */2 :
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: Globals$WildCards.restr("The transaction was declined by your wallet, please try again.")
                        }), React.createElement("p", undefined, Globals$WildCards.restr("Failure reason: " + txState[0])), children);
      case /* ServerError */3 :
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: Globals$WildCards.restr("There was a server error when submitting your transaction.")
                        }), React.createElement("p", undefined, Globals$WildCards.restr("Failure reason: " + txState[0])), children);
      case /* Complete */4 :
          var txHash = txState[0].transactionHash;
          return React.createElement(React.Fragment, {
                      children: null
                    }, React.createElement(RimbleUi.Heading, {
                          children: null
                        }, Globals$WildCards.restr("Transaction Complete "), React.createElement(WildcardsLoader$WildCards.make, { })), React.createElement(RimbleUi.Text, {
                          children: React.createElement("a", {
                                href: "https://" + (String(txExplererUrl) + ("/tx/" + (String(txHash) + ""))),
                                rel: "noopener noreferrer",
                                target: "_blank"
                              }, Globals$WildCards.restr("View the transaction on " + txExplererUrl))
                        }), React.createElement(RimbleUi.Button, {
                          children: Globals$WildCards.restr(closeButtonText),
                          onClick: (function (_e) {
                              return Curry._1(clearNonUrlState, undefined);
                            })
                        }));
      
    }
  }
}

var make = TxTemplate;

export {
  make ,
  
}
/* react Not a pure module */
