// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Css from "bs-css-emotion/src/Css.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as RimbleUi from "rimble-ui";
import * as Belt_Float from "bs-platform/lib/es6/belt_Float.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Styles$WildCards from "../../Styles.bs.js";
import * as Globals$WildCards from "../../harberger-lib/Globals.bs.js";
import * as QlHooks$WildCards from "../../harberger-lib/QlHooks.bs.js";
import * as Web3Utils$WildCards from "../../harberger-lib/Web3Utils.bs.js";
import * as UsdPriceProvider$WildCards from "../../harberger-lib/components/UsdPriceProvider.bs.js";
import TotalRaisedEtherCountupJs from "./TotalRaisedEtherCountup.js";

var make = TotalRaisedEtherCountupJs;

var TotalRaisedEtherCountup = {
  make: make
};

function uesTotalPatronage(param) {
  var optTotalPatronageWei = QlHooks$WildCards.useAmountRaised(undefined);
  var optCurrentUsdEthPrice = UsdPriceProvider$WildCards.useUsdPrice(undefined);
  if (optTotalPatronageWei === undefined) {
    return /* Loading */0;
  }
  var totalPatronageEth = Web3Utils$WildCards.fromWeiToEth(Caml_option.valFromOption(optTotalPatronageWei).toString());
  var optTotaPatronageUsd = Belt_Option.flatMap(optCurrentUsdEthPrice, (function (currentUsdEthPrice) {
          return (Globals$WildCards.mapd(Belt_Float.fromString(totalPatronageEth), 0, (function (a) {
                            return a;
                          })) * currentUsdEthPrice).toFixed(2);
        }));
  return /* Loaded */{
          _0: totalPatronageEth,
          _1: optTotaPatronageUsd
        };
}

function TotalRaised(Props) {
  var totalPatronageRaised = uesTotalPatronage(undefined);
  if (!totalPatronageRaised) {
    return React.createElement(RimbleUi.Loader, {});
  }
  var optTotaPatronageUsd = totalPatronageRaised._1;
  return React.createElement("div", {
              className: Curry._1(Css.style, {
                    hd: Css.display("flex"),
                    tl: {
                      hd: Css.alignItems("center"),
                      tl: {
                        hd: Css.justifyContent("center"),
                        tl: {
                          hd: Css.flexDirection("column"),
                          tl: /* [] */0
                        }
                      }
                    }
                  })
            }, React.createElement("p", {
                  className: Curry._1(Css.style, {
                        hd: Css.display("table"),
                        tl: /* [] */0
                      })
                }, React.createElement("small", undefined, React.createElement("span", {
                          className: Styles$WildCards.totalRaisedText(1.5)
                        }, "Wildcards has currently raised "), React.createElement("br", undefined), React.createElement("span", {
                          className: Styles$WildCards.totalRaisedText(4)
                        }, React.createElement(make, {
                              totalRaised: totalPatronageRaised._0
                            }), React.createElement("strong", undefined, " ETH ")), React.createElement("br", undefined), optTotaPatronageUsd !== undefined ? React.createElement(React.Fragment, {
                            children: null
                          }, React.createElement("span", {
                                className: Styles$WildCards.totalRaisedText(2.5)
                              }, "(", optTotaPatronageUsd, React.createElement("strong", undefined, " USD"), ")"), React.createElement("br", undefined), React.createElement("span", {
                                className: Styles$WildCards.totalRaisedText(1.5)
                              }, " for conservation.")) : null)));
}

var make$1 = TotalRaised;

export {
  TotalRaisedEtherCountup ,
  uesTotalPatronage ,
  make$1 as make,
  
}
/* make Not a pure module */
