// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Css from "bs-css-emotion/src/Css.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as RimbleUi from "rimble-ui";
import * as Belt_Array from "bs-platform/lib/es6/belt_Array.js";
import * as Belt_Float from "bs-platform/lib/es6/belt_Float.js";
import * as Globals$WildCards from "../harberger-lib/Globals.bs.js";

function hasDecimals(value) {
  return value - (value | 0) > 0;
}

function QVSelect(Props) {
  var submitVoteFunction = Props.submitVoteFunction;
  var maxVote = Props.maxVote;
  var match = React.useState((function () {
          return maxVote;
        }));
  var setVoteValue = match[1];
  var voteValue = match[0];
  var match$1 = React.useState((function () {
          return Globals$WildCards.toFixedWithPrecisionNoTrailingZeros(maxVote, 9);
        }));
  var setVoteText = match$1[1];
  return React.createElement(RimbleUi.Flex, {
              children: null,
              flexWrap: "wrap",
              alignItems: "space-between"
            }, Belt_Array.map([
                  1,
                  2,
                  3,
                  4,
                  5
                ], (function (x) {
                    var disabled = x >= maxVote;
                    return React.createElement(RimbleUi.Box, {
                                children: React.createElement(RimbleUi.Button, {
                                      className: Curry._1(Css.style, /* :: */[
                                            Css.width(/* `percent */[
                                                  -119887163,
                                                  90
                                                ]),
                                            /* :: */[
                                              Css.margin(/* `percent */[
                                                    -119887163,
                                                    5
                                                  ]),
                                              /* [] */0
                                            ]
                                          ]),
                                      disabled: disabled,
                                      children: Globals$WildCards.restr(String(x) + (" Vote = " + (String(x * x) + " WLT"))),
                                      onClick: (function (param) {
                                          return Curry._1(submitVoteFunction, x);
                                        }),
                                      key: String(x)
                                    }),
                                width: [
                                  1,
                                  0.32
                                ],
                                key: x.toString()
                              });
                  })), React.createElement(RimbleUi.Box, {
                  children: React.createElement("form", {
                        className: Curry._1(Css.style, /* :: */[
                              Css.width(/* `percent */[
                                    -119887163,
                                    90
                                  ]),
                              /* :: */[
                                Css.margin(/* `percent */[
                                      -119887163,
                                      5
                                    ]),
                                /* [] */0
                              ]
                            ])
                      }, React.createElement("input", {
                            className: Curry._1(Css.style, /* :: */[
                                  Css.width(/* `calc */[
                                        -1044768619,
                                        /* tuple */[
                                          /* sub */5745024,
                                          /* `percent */[
                                            -119887163,
                                            94
                                          ],
                                          /* `px */[
                                            25096,
                                            2
                                          ]
                                        ]
                                      ]),
                                  /* :: */[
                                    Css.padding(/* `percent */[
                                          -119887163,
                                          3
                                        ]),
                                    /* :: */[
                                      Css.borderWidth(/* `px */[
                                            25096,
                                            1
                                          ]),
                                      /* :: */[
                                        Css.borderRadius(/* `px */[
                                              25096,
                                              3
                                            ]),
                                        /* [] */0
                                      ]
                                    ]
                                  ]
                                ]),
                            max: String(maxVote),
                            min: 0,
                            type: "number",
                            value: match$1[0],
                            onChange: (function ($$event) {
                                var voteValueString = $$event.target.value;
                                var optVoteValue = Belt_Float.fromString(voteValueString);
                                if (optVoteValue !== undefined) {
                                  Curry._1(setVoteText, (function (param) {
                                          return voteValueString;
                                        }));
                                  if (optVoteValue < 0) {
                                    return Curry._1(setVoteValue, (function (param) {
                                                  return 0;
                                                }));
                                  } else if (optVoteValue >= maxVote) {
                                    Curry._1(setVoteText, (function (param) {
                                            return Globals$WildCards.toFixedWithPrecisionNoTrailingZeros(maxVote, 9);
                                          }));
                                    return Curry._1(setVoteValue, (function (param) {
                                                  return maxVote;
                                                }));
                                  } else {
                                    return Curry._1(setVoteValue, (function (param) {
                                                  return optVoteValue;
                                                }));
                                  }
                                } else if (voteValueString === "") {
                                  return Curry._1(setVoteText, (function (param) {
                                                return voteValueString;
                                              }));
                                } else {
                                  return ;
                                }
                              })
                          }), React.createElement("button", {
                            className: Curry._1(Css.style, /* :: */[
                                  Css.width(/* `percent */[
                                        -119887163,
                                        100
                                      ]),
                                  /* :: */[
                                    Css.marginTop(/* `px */[
                                          25096,
                                          2
                                        ]),
                                    /* :: */[
                                      Css.fontSize(/* `px */[
                                            25096,
                                            11
                                          ]),
                                      /* [] */0
                                    ]
                                  ]
                                ]),
                            onClick: (function (param) {
                                return Curry._1(submitVoteFunction, voteValue);
                              })
                          }, Globals$WildCards.restr(Globals$WildCards.toFixedWithPrecisionNoTrailingZeros(voteValue, 9) + (" votes = " + (Globals$WildCards.toFixedWithPrecisionNoTrailingZeros(voteValue * voteValue, 3) + " WLT"))))),
                  width: [
                    1,
                    0.32
                  ]
                }));
}

var make = QVSelect;

export {
  hasDecimals ,
  make ,
  
}
/* Css Not a pure module */
