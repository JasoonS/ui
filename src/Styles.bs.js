// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as Css from "bs-css-emotion/src/Css.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Belt_List from "bs-platform/lib/es6/belt_List.js";
import * as Pervasives from "bs-platform/lib/es6/pervasives.js";
import * as Css_Legacy_Core from "bs-css/src/Css_Legacy_Core.bs.js";

var backgroundImageGorilla = "/img/wildcardsimages/wild-jungle-background.jpg";

Curry._2(Css.$$global, "body", {
      hd: Css.margin({
            NAME: "px",
            VAL: 0
          }),
      tl: {
        hd: Css.fontFamily({
              NAME: "custom",
              VAL: "Lato, Helvetica, sans-serif"
            }),
        tl: {
          hd: Css.overflowX(Css.hidden),
          tl: {
            hd: Css.width({
                  NAME: "percent",
                  VAL: 100
                }),
            tl: {
              hd: Css.position("relative"),
              tl: /* [] */0
            }
          }
        }
      }
    });

Curry._2(Css.$$global, "a", {
      hd: Css.color(Css.hex("303030")),
      tl: {
        hd: Css.textDecoration(Css.none),
        tl: /* [] */0
      }
    });

Curry._2(Css.$$global, "a:hover", {
      hd: Css.textDecoration(Css.underline),
      tl: /* [] */0
    });

Curry._2(Css.$$global, "a:active", {
      hd: Css.color(Css.hex("303030")),
      tl: /* [] */0
    });

Curry._2(Css.$$global, "a:visited", {
      hd: Css.color(Css.hex("303030")),
      tl: /* [] */0
    });

var app = Curry._1(Css.style, {
      hd: Css.boxSizing("borderBox"),
      tl: {
        hd: Css.fontSize(Css.px(16)),
        tl: /* [] */0
      }
    });

var textOnlyModalText = Curry._1(Css.style, {
      hd: Css.padding(Css.em(2)),
      tl: /* [] */0
    });

function totalRaisedText(size) {
  return Curry._1(Css.style, {
              hd: Css.fontSize(Css.em(size)),
              tl: /* [] */0
            });
}

var copyButton = Curry._1(Css.style, {
      hd: Css.$$float("right"),
      tl: {
        hd: Css.zIndex(50),
        tl: /* [] */0
      }
    });

var centerItems = Curry._1(Css.style, {
      hd: Css.display("flex"),
      tl: {
        hd: Css.alignItems(Css.center),
        tl: {
          hd: Css.width({
                NAME: "percent",
                VAL: 100
              }),
          tl: /* [] */0
        }
      }
    });

var centerItemsMargin = Curry._1(Css.style, {
      hd: Css.display(Css.block),
      tl: {
        hd: Css.margin(Css.auto),
        tl: /* [] */0
      }
    });

var translationSwitch = Curry._1(Css.style, {
      hd: Css.padding(Css.rem(0)),
      tl: /* [] */0
    });

var topBody = Curry._1(Css.style, {
      hd: Css.justifyContent("spaceBetween"),
      tl: {
        hd: Css.media("(max-width: 831px)", {
              hd: Css.textAlign(Css.center),
              tl: /* [] */0
            }),
        tl: {
          hd: Css.paddingLeft(Css.px(15)),
          tl: {
            hd: Css.paddingRight(Css.px(15)),
            tl: {
              hd: Css.maxWidth(Css.px(1200)),
              tl: {
                hd: Css.margin(Css.auto),
                tl: /* [] */0
              }
            }
          }
        }
      }
    });

var header = Curry._1(Css.style, {
      hd: Css.position(Css.relative),
      tl: /* [] */0
    });

var noMarginBottom = Curry._1(Css.style, {
      hd: Css.marginBottom(Css.px(0)),
      tl: /* [] */0
    });

var noMarginTop = Curry._1(Css.style, {
      hd: Css.marginTop(Css.px(0)),
      tl: /* [] */0
    });

var headerLogo = Curry._1(Css.style, {
      hd: Css.media("(max-width: 630px)", {
            hd: Css.textAlign(Css.center),
            tl: {
              hd: Css.display("block"),
              tl: /* [] */0
            }
          }),
      tl: /* [] */0
    });

var nav = Curry._1(Css.style, {
      hd: Css.position(Css.absolute),
      tl: {
        hd: Css.maxWidth(Css.px(1200)),
        tl: {
          hd: Css.zIndex(200),
          tl: {
            hd: Css.top(Css.px(0)),
            tl: {
              hd: Css.right(Css.px(0)),
              tl: {
                hd: Css.left(Css.px(0)),
                tl: {
                  hd: Css.margin2(Css.em(0), Css.auto),
                  tl: /* [] */0
                }
              }
            }
          }
        }
      }
    });

var navBox = Curry._1(Css.style, {
      hd: Css.display("flex"),
      tl: {
        hd: Css.justifyContent("spaceBetween"),
        tl: {
          hd: Css.alignItems(Css.center),
          tl: /* [] */0
        }
      }
    });

var navList = Curry._1(Css.style, {
      hd: Css.display("flex"),
      tl: {
        hd: Css.alignItems("center"),
        tl: {
          hd: Css.media("(max-width: 630px)", {
                hd: Css.display(Css.none),
                tl: /* [] */0
              }),
          tl: {
            hd: Css.marginLeft("auto"),
            tl: {
              hd: Css.listStyle("none", "inside", "none"),
              tl: /* [] */0
            }
          }
        }
      }
    });

var positionRelative = Curry._1(Css.style, {
      hd: Css.position(Css.relative),
      tl: /* [] */0
    });

function overlayImg(topPosition, leftPosition) {
  return Curry._1(Css.style, {
              hd: Css.position(Css.absolute),
              tl: {
                hd: Css.zIndex(2),
                tl: {
                  hd: Css.top({
                        NAME: "percent",
                        VAL: topPosition
                      }),
                  tl: {
                    hd: Css.left({
                          NAME: "percent",
                          VAL: leftPosition
                        }),
                    tl: {
                      hd: Css.width({
                            NAME: "percent",
                            VAL: 20
                          }),
                      tl: {
                        hd: Css.height({
                              NAME: "percent",
                              VAL: 20
                            }),
                        tl: {
                          hd: Css.minWidth(Css.px(50)),
                          tl: {
                            hd: Css.minHeight(Css.px(50)),
                            tl: /* [] */0
                          }
                        }
                      }
                    }
                  }
                }
              }
            });
}

var overlayFlameImg = overlayImg(20, 0);

var prettyTransparent = Css.rgba(255, 255, 255, {
      NAME: "num",
      VAL: 0.5
    });

var imageHoverStyle = Css.hover({
      hd: Css.filter({
            hd: {
              NAME: "saturate",
              VAL: 150
            },
            tl: {
              hd: {
                NAME: "brightness",
                VAL: 110
              },
              tl: /* [] */0
            }
          }),
      tl: {
        hd: Css.overflow(Css.visible),
        tl: {
          hd: Css.backgroundColor(prettyTransparent),
          tl: {
            hd: Css.boxShadow(Css_Legacy_Core.Shadow.box(undefined, undefined, Css.px(20), Css.px(20), undefined, prettyTransparent)),
            tl: {
              hd: Css.transform(Css.scale(1.3, 1.3)),
              tl: {
                hd: Css.transition(100, 0, Css.ease, "all"),
                tl: /* [] */0
              }
            }
          }
        }
      }
    });

function overlayBadgeImg(x, y) {
  return Cn.fromList({
              hd: overlayImg(x, y),
              tl: {
                hd: Curry._1(Css.style, {
                      hd: Css.borderRadius({
                            NAME: "percent",
                            VAL: 100
                          }),
                      tl: {
                        hd: imageHoverStyle,
                        tl: /* [] */0
                      }
                    }),
                tl: /* [] */0
              }
            });
}

var streakText = Curry._1(Css.style, {
      hd: Css.position(Css.absolute),
      tl: {
        hd: Css.zIndex(100),
        tl: {
          hd: Css.bottom({
                NAME: "percent",
                VAL: -30
              }),
          tl: {
            hd: Css.right({
                  NAME: "percent",
                  VAL: 50
                }),
            tl: {
              hd: Css.transform(Css.translateX({
                        NAME: "percent",
                        VAL: 50
                      })),
              tl: /* [] */0
            }
          }
        }
      }
    });

var flameImg = Curry._1(Css.style, {
      hd: Css.width({
            NAME: "percent",
            VAL: 100
          }),
      tl: {
        hd: Css.maxWidth(Css.em(2.1)),
        tl: /* [] */0
      }
    });

var navListItem = Curry._1(Css.style, {
      hd: Css.display(Css.inlineBlock),
      tl: /* [] */0
    });

var navListItemToggle = Curry._1(Css.style, {
      hd: Css.display("flex"),
      tl: {
        hd: Css.justifyContent(Css.center),
        tl: {
          hd: Css.alignItems(Css.center),
          tl: /* [] */0
        }
      }
    });

var someMarginRight = Curry._1(Css.style, {
      hd: Css.marginRight(Css.px(6)),
      tl: /* [] */0
    });

var navListText = Curry._1(Css.style, {
      hd: Css.color(Css.rgb(136, 136, 136)),
      tl: {
        hd: Css.padding(Css.rem(1)),
        tl: {
          hd: Css.fontWeight(Css.bold),
          tl: /* [] */0
        }
      }
    });

var leftTopHeader = Curry._1(Css.style, {
      hd: Css.position(Css.relative),
      tl: {
        hd: Css.width(Css.px(550)),
        tl: {
          hd: Css.maxWidth(Css.px(550)),
          tl: {
            hd: Css.paddingTop(Css.px(70)),
            tl: {
              hd: Css.paddingBottom(Css.px(70)),
              tl: /* [] */0
            }
          }
        }
      }
    });

var centerText = Curry._1(Css.style, {
      hd: Css.textAlign(Css.center),
      tl: /* [] */0
    });

var dappImagesCounteractOffset = Curry._1(Css.style, {
      hd: Css.marginLeft({
            NAME: "percent",
            VAL: 4
          }),
      tl: /* [] */0
    });

var heading = Curry._1(Css.style, {
      hd: Css.fontSize(Css.em(3)),
      tl: {
        hd: Css.media("(min-width: 768px)", {
              hd: Css.paddingTop({
                    NAME: "rem",
                    VAL: 3
                  }),
              tl: /* [] */0
            }),
        tl: /* [] */0
      }
    });

var subHeading = Curry._1(Css.style, {
      hd: Css.fontSize(Css.em(1.8)),
      tl: {
        hd: Css.fontWeight({
              NAME: "num",
              VAL: 200
            }),
        tl: /* [] */0
      }
    });

var wildCardGreen = Css.rgb(107, 173, 62);

var wildCardBlue = Css.rgb(114, 199, 215);

var wildCardGrey = Css.rgb(100, 100, 100);

var colorGreen = Curry._1(Css.style, {
      hd: Css.color(wildCardGreen),
      tl: /* [] */0
    });

var colorBlue = Curry._1(Css.style, {
      hd: Css.color(wildCardBlue),
      tl: /* [] */0
    });

var colorGrey = Curry._1(Css.style, {
      hd: Css.color(wildCardGrey),
      tl: /* [] */0
    });

var animalBox = Curry._1(Css.style, {
      hd: Css.marginRight({
            NAME: "percent",
            VAL: 12
          }),
      tl: /* [] */0
    });

var clickableLink = Curry._1(Css.style, {
      hd: Css.media("(max-width: 630px)", {
            hd: Css.width({
                  NAME: "percent",
                  VAL: 100
                }),
            tl: /* [] */0
          }),
      tl: {
        hd: Css.cursor("pointer"),
        tl: /* [] */0
      }
    });

function mainImageHoverStyle(scalar) {
  return Css.hover({
              hd: Css.filter({
                    hd: {
                      NAME: "saturate",
                      VAL: 150
                    },
                    tl: {
                      hd: {
                        NAME: "brightness",
                        VAL: 110
                      },
                      tl: /* [] */0
                    }
                  }),
              tl: {
                hd: Css.zIndex(2),
                tl: {
                  hd: Css.overflow(Css.visible),
                  tl: {
                    hd: Css.transform(Css.scale(1.1 * scalar, 1.1 * scalar)),
                    tl: {
                      hd: Css.transition(100, 0, Css.ease, "all"),
                      tl: /* [] */0
                    }
                  }
                }
              }
            });
}

function headerImg(enlargement, scalar) {
  return Curry._1(Css.style, {
              hd: Css.position("relative"),
              tl: {
                hd: Css.zIndex(1),
                tl: {
                  hd: Css.maxHeight(Css.px(500)),
                  tl: {
                    hd: Css.width({
                          NAME: "percent",
                          VAL: 100 * enlargement
                        }),
                    tl: {
                      hd: Css.left({
                            NAME: "percent",
                            VAL: -50 * (enlargement - 1)
                          }),
                      tl: {
                        hd: Css.transform(Css.scale(scalar, scalar)),
                        tl: {
                          hd: Css.textAlign(Css.center),
                          tl: {
                            hd: Css.transition(1000, 0, Css.ease, "all"),
                            tl: {
                              hd: mainImageHoverStyle(scalar),
                              tl: /* [] */0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            });
}

var horizantalBlueTile = Curry._1(Css.style, {
      hd: Css.width({
            NAME: "percent",
            VAL: 100
          }),
      tl: {
        hd: Css.padding2(Css.em(2), Css.em(0)),
        tl: {
          hd: Css.backgroundColor({
                NAME: "hex",
                VAL: "73c7d7ff"
              }),
          tl: {
            hd: Css.textAlign("center"),
            tl: /* [] */0
          }
        }
      }
    });

var explainerLargeText = Curry._1(Css.style, {
      hd: Css.fontSize(Css.rem(2)),
      tl: {
        hd: Css.color({
              NAME: "hex",
              VAL: "486269"
            }),
        tl: {
          hd: Css.padding2(Css.em(0), Css.em(6)),
          tl: {
            hd: Css.margin2(Css.em(0), Css.auto),
            tl: {
              hd: Css.maxWidth(Css.px(1200)),
              tl: {
                hd: Css.media("(max-width: 760px)", {
                      hd: Css.fontSize(Css.rem(1.2)),
                      tl: {
                        hd: Css.padding2(Css.em(0), Css.em(2)),
                        tl: /* [] */0
                      }
                    }),
                tl: /* [] */0
              }
            }
          }
        }
      }
    });

var explainerMediumText = Curry._1(Css.style, {
      hd: Css.media("(max-width: 760px)", {
            hd: Css.fontSize(Css.rem(1.1)),
            tl: {
              hd: Css.padding2(Css.em(0), Css.em(2)),
              tl: /* [] */0
            }
          }),
      tl: {
        hd: Css.padding2(Css.em(0), Css.em(3)),
        tl: {
          hd: Css.margin2(Css.em(0), Css.auto),
          tl: {
            hd: Css.maxWidth(Css.px(1200)),
            tl: {
              hd: Css.fontSize(Css.rem(1.6)),
              tl: {
                hd: Css.color({
                      NAME: "hex",
                      VAL: "486269"
                    }),
                tl: {
                  hd: Css.textAlign("center"),
                  tl: /* [] */0
                }
              }
            }
          }
        }
      }
    });

var boldExplainerText = Curry._1(Css.style, {
      hd: Css.color({
            NAME: "hex",
            VAL: "303030"
          }),
      tl: {
        hd: Css.fontWeight("bold"),
        tl: /* [] */0
      }
    });

var infoBackground = Curry._1(Css.style, {
      hd: Css.backgrounds({
            hd: {
              NAME: "linearGradient",
              VAL: [
                Css.deg(0),
                {
                  hd: [
                    Css.zero,
                    {
                      NAME: "rgba",
                      VAL: [
                        255,
                        255,
                        255,
                        {
                          NAME: "num",
                          VAL: 0.2
                        }
                      ]
                    }
                  ],
                  tl: {
                    hd: [
                      Css.zero,
                      {
                        NAME: "rgba",
                        VAL: [
                          255,
                          255,
                          255,
                          {
                            NAME: "num",
                            VAL: 0.2
                          }
                        ]
                      }
                    ],
                    tl: /* [] */0
                  }
                }
              ]
            },
            tl: {
              hd: {
                NAME: "url",
                VAL: backgroundImageGorilla
              },
              tl: /* [] */0
            }
          }),
      tl: {
        hd: Css.backgroundSize("cover"),
        tl: {
          hd: Css.backgroundRepeat("noRepeat"),
          tl: {
            hd: Css.height({
                  NAME: "percent",
                  VAL: 100
                }),
            tl: /* [] */0
          }
        }
      }
    });

var infoCardContainer = Curry._1(Css.style, {
      hd: Css.padding({
            NAME: "rem",
            VAL: 1
          }),
      tl: /* [] */0
    });

var infoCardStyles = Curry._1(Css.style, {
      hd: Css.margin({
            NAME: "rem",
            VAL: 4
          }),
      tl: {
        hd: Css.media("(max-width: 831px)", {
              hd: Css.margin({
                    NAME: "rem",
                    VAL: 0
                  }),
              tl: {
                hd: Css.textAlign(Css.center),
                tl: /* [] */0
              }
            }),
        tl: /* [] */0
      }
    });

var animalImage = Curry._1(Css.style, {
      hd: Css.media("(max-width: 831px)", {
            hd: Css.display(Css.none),
            tl: /* [] */0
          }),
      tl: /* [] */0
    });

var redDisclaimer = Curry._1(Css.style, {
      hd: Css.fontSize({
            NAME: "rem",
            VAL: 0.9
          }),
      tl: {
        hd: Css.color({
              NAME: "hex",
              VAL: "e85723"
            }),
        tl: /* [] */0
      }
    });

var floatingSignupBox = Curry._1(Css.style, {
      hd: Css.maxWidth(Css.px(900)),
      tl: {
        hd: Css.margin2(Css.em(0), Css.auto),
        tl: /* [] */0
      }
    });

var floatingSignupBoxInner = Curry._1(Css.style, {
      hd: Css.padding(Css.em(3)),
      tl: /* [] */0
    });

var emailSignupHeader = Curry._1(Css.style, {
      hd: Css.fontSize(Css.px(24)),
      tl: /* [] */0
    });

var emailTextBox = Curry._1(Css.style, /* [] */0);

var inputElements = Curry._1(Css.style, {
      hd: Css.padding(Css.em(0.1)),
      tl: /* [] */0
    });

var extraInfoFooterBox = Curry._1(Css.style, {
      hd: Css.textAlign(Css.center),
      tl: {
        hd: Css.maxWidth(Css.px(600)),
        tl: {
          hd: Css.backgroundColor(Css.rgb(107, 173, 62)),
          tl: {
            hd: Css.margin2(Css.em(6), Css.auto),
            tl: {
              hd: Css.position(Css.relative),
              tl: /* [] */0
            }
          }
        }
      }
    });

var emoticonHeader = Curry._1(Css.style, {
      hd: Css.position(Css.absolute),
      tl: {
        hd: Css.left(Css.px(0)),
        tl: {
          hd: Css.right(Css.px(0)),
          tl: {
            hd: Css.top(Css.px(0)),
            tl: {
              hd: Css.margin(Css.auto),
              tl: {
                hd: Css.transform(Css.translateY({
                          NAME: "percent",
                          VAL: -50
                        })),
                tl: {
                  hd: Css.textAlign(Css.center),
                  tl: /* [] */0
                }
              }
            }
          }
        }
      }
    });

var emojiStyles = Curry._1(Css.style, {
      hd: Css.height(Css.px(55)),
      tl: {
        hd: Css.maxHeight({
              NAME: "percent",
              VAL: 100
            }),
        tl: {
          hd: Css.position(Css.relative),
          tl: {
            hd: Css.verticalAlign(Css.middle),
            tl: {
              hd: Css.bottom(Css.px(1)),
              tl: /* [] */0
            }
          }
        }
      }
    });

var finalNoteContent = Curry._1(Css.style, {
      hd: Css.padding(Css.rem(1.5)),
      tl: {
        hd: Css.margin(Css.ex(4)),
        tl: /* [] */0
      }
    });

var whiteText = Curry._1(Css.style, {
      hd: Css.important(Css.color(Css.white)),
      tl: /* [] */0
    });

var linkPillBox = Curry._1(Css.style, {
      hd: Css.marginTop(Css.px(25)),
      tl: {
        hd: Css.boxSizing(Css.borderBox),
        tl: {
          hd: Css.minHeight(Css.px(25)),
          tl: {
            hd: Css.fontSize(Css.px(14)),
            tl: {
              hd: Css.borderRadius(Css.px(25)),
              tl: {
                hd: Css.color(Css.hex("fff")),
                tl: {
                  hd: Css.backgroundColor(Css.rgba(48, 48, 48, {
                            NAME: "num",
                            VAL: 0.12
                          })),
                  tl: /* [] */0
                }
              }
            }
          }
        }
      }
    });

var linkPillText = Curry._1(Css.style, {
      hd: Css.margin(Css.px(10)),
      tl: {
        hd: Css.marginBottom(Css.px(1)),
        tl: {
          hd: Css.color(Css.hex("fff")),
          tl: /* [] */0
        }
      }
    });

var betaBanner = Curry._1(Css.style, {
      hd: Css.position("absolute"),
      tl: {
        hd: Css.left({
              NAME: "px",
              VAL: 0
            }),
        tl: {
          hd: Css.top({
                NAME: "px",
                VAL: 0
              }),
          tl: {
            hd: Css.width({
                  NAME: "px",
                  VAL: 80
                }),
            tl: /* [] */0
          }
        }
      }
    });

var loginButton = Curry._1(Css.style, {
      hd: Css.paddingLeft({
            NAME: "px",
            VAL: 10
          }),
      tl: /* [] */0
    });

var forwardBackButton = Curry._1(Css.style, {
      hd: Css.width({
            NAME: "percent",
            VAL: 100
          }),
      tl: {
        hd: Css.height({
              NAME: "em",
              VAL: 5
            }),
        tl: /* [] */0
      }
    });

function mergeStyles(styles) {
  return Belt_List.reduce(styles, "", (function (prev, next) {
                return prev + (" " + next);
              }));
}

var wrapText = Curry._1(Css.style, {
      hd: Css.overflowWrap("breakWord"),
      tl: {
        hd: Css.wordWrap("breakWord"),
        tl: /* [] */0
      }
    });

var fiftyPercentWidth = Curry._1(Css.style, {
      hd: Css.width({
            NAME: "percent",
            VAL: 50
          }),
      tl: /* [] */0
    });

var carousel = Curry._1(Css.style, {
      hd: Css.position("relative"),
      tl: {
        hd: Css.width({
              NAME: "percent",
              VAL: 150
            }),
        tl: {
          hd: Css.left({
                NAME: "percent",
                VAL: -25
              }),
          tl: /* [] */0
        }
      }
    });

var invisibleGorilla = Curry._1(Css.style, {
      hd: Css.display("none"),
      tl: /* [] */0
    });

function fadeOut(targetOpacity) {
  return Curry._1(Css.style, Belt_List.concat({
                  hd: Css.width({
                        NAME: "percent",
                        VAL: 100
                      }),
                  tl: {
                    hd: Css.transition(2000, 0, Css.ease, "opacity"),
                    tl: /* [] */0
                  }
                }, {
                  hd: Css.opacity(targetOpacity),
                  tl: /* [] */0
                }));
}

function carouselArrow(absolutePositionOpt, onLeft) {
  var absolutePosition = absolutePositionOpt !== undefined ? absolutePositionOpt : true;
  return Curry._1(Css.style, Pervasives.$at({
                  hd: Css.cursor("pointer"),
                  tl: {
                    hd: Css.padding({
                          NAME: "px",
                          VAL: 20
                        }),
                    tl: {
                      hd: Css.color(Css.white),
                      tl: {
                        hd: Css.backgroundColor(Css.hex("72c7d7")),
                        tl: {
                          hd: Css.hover(Pervasives.$at({
                                    hd: Css.backgroundColor(Css.hex("40b2c9")),
                                    tl: /* [] */0
                                  }, onLeft ? ({
                                        hd: Css.paddingLeft({
                                              NAME: "px",
                                              VAL: 15
                                            }),
                                        tl: {
                                          hd: Css.paddingRight({
                                                NAME: "px",
                                                VAL: 25
                                              }),
                                          tl: /* [] */0
                                        }
                                      }) : ({
                                        hd: Css.paddingRight({
                                              NAME: "px",
                                              VAL: 15
                                            }),
                                        tl: {
                                          hd: Css.paddingLeft({
                                                NAME: "px",
                                                VAL: 25
                                              }),
                                          tl: /* [] */0
                                        }
                                      }))),
                          tl: {
                            hd: Css.borderRadius(Css.px(4)),
                            tl: {
                              hd: Css.zIndex(3),
                              tl: /* [] */0
                            }
                          }
                        }
                      }
                    }
                  }
                }, absolutePosition ? ({
                      hd: Css.position(Css.absolute),
                      tl: {
                        hd: Css.transform(Css.translateX({
                                  NAME: "percent",
                                  VAL: -50
                                })),
                        tl: {
                          hd: onLeft ? Css.left({
                                  NAME: "percent",
                                  VAL: 20
                                }) : Css.left({
                                  NAME: "percent",
                                  VAL: 80
                                }),
                          tl: /* [] */0
                        }
                      }
                    }) : /* [] */0));
}

export {
  backgroundImageGorilla ,
  app ,
  textOnlyModalText ,
  totalRaisedText ,
  copyButton ,
  centerItems ,
  centerItemsMargin ,
  translationSwitch ,
  topBody ,
  header ,
  noMarginBottom ,
  noMarginTop ,
  headerLogo ,
  nav ,
  navBox ,
  navList ,
  positionRelative ,
  overlayImg ,
  overlayFlameImg ,
  prettyTransparent ,
  imageHoverStyle ,
  overlayBadgeImg ,
  streakText ,
  flameImg ,
  navListItem ,
  navListItemToggle ,
  someMarginRight ,
  navListText ,
  leftTopHeader ,
  centerText ,
  dappImagesCounteractOffset ,
  heading ,
  subHeading ,
  wildCardGreen ,
  wildCardBlue ,
  wildCardGrey ,
  colorGreen ,
  colorBlue ,
  colorGrey ,
  animalBox ,
  clickableLink ,
  mainImageHoverStyle ,
  headerImg ,
  horizantalBlueTile ,
  explainerLargeText ,
  explainerMediumText ,
  boldExplainerText ,
  infoBackground ,
  infoCardContainer ,
  infoCardStyles ,
  animalImage ,
  redDisclaimer ,
  floatingSignupBox ,
  floatingSignupBoxInner ,
  emailSignupHeader ,
  emailTextBox ,
  inputElements ,
  extraInfoFooterBox ,
  emoticonHeader ,
  emojiStyles ,
  finalNoteContent ,
  whiteText ,
  linkPillBox ,
  linkPillText ,
  betaBanner ,
  loginButton ,
  forwardBackButton ,
  mergeStyles ,
  wrapText ,
  fiftyPercentWidth ,
  carousel ,
  invisibleGorilla ,
  fadeOut ,
  carouselArrow ,
  
}
/*  Not a pure module */
