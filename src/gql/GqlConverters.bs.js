// Generated by ReScript, PLEASE EDIT WITH CARE

import BnJs from "bn.js";
import * as Js_json from "bs-platform/lib/es6/js_json.js";
import * as MomentRe from "bs-moment/src/MomentRe.bs.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Caml_format from "bs-platform/lib/es6/caml_format.js";
import * as Eth$WildCards from "../harberger-lib/Eth.bs.js";
import * as TokenId$WildCards from "../harberger-lib/TokenId.bs.js";

function parse(json) {
  var str = Js_json.decodeString(json);
  if (str !== undefined) {
    return new BnJs(str);
  } else {
    console.log("CRITICAL - should never happen!");
    return new BnJs(0);
  }
}

function serialize(bn) {
  return bn.toString();
}

var $$BigInt = {
  parse: parse,
  serialize: serialize
};

function parse$1(stringBn) {
  return new BnJs(stringBn);
}

function serialize$1(bn) {
  return bn.toString();
}

var BigIntStr = {
  parse: parse$1,
  serialize: serialize$1
};

function parse$2(tokenIdJson) {
  return Belt_Option.getWithDefault(TokenId$WildCards.make(Belt_Option.mapWithDefault(Js_json.decodeString(tokenIdJson), "0", (function (a) {
                        return a;
                      }))), TokenId$WildCards.makeFromInt(0));
}

var serialize$2 = TokenId$WildCards.toString;

var GqlTokenId = {
  parse: parse$2,
  serialize: serialize$2
};

function parse$3(price) {
  return Eth$WildCards.makeWithDefault(Belt_Option.mapWithDefault(Js_json.decodeString(price), "0", (function (a) {
                    return a;
                  })), 0);
}

function serialize$3(price) {
  return price.toString();
}

var Price = {
  parse: parse$3,
  serialize: serialize$3
};

function parse$4(moment) {
  return MomentRe.momentWithUnix(Belt_Option.mapWithDefault(Js_json.decodeString(moment), 0, Caml_format.caml_int_of_string));
}

function serialize$4(moment) {
  return String(moment.unix());
}

var GqlMoment = {
  parse: parse$4,
  serialize: serialize$4
};

function parse$5(address) {
  return Belt_Option.mapWithDefault(Js_json.decodeString(address), "0x0", (function (a) {
                return a;
              }));
}

function serialize$5(address) {
  return address;
}

var GqlAddress = {
  parse: parse$5,
  serialize: serialize$5
};

export {
  $$BigInt ,
  BigIntStr ,
  GqlTokenId ,
  Price ,
  GqlMoment ,
  GqlAddress ,
  
}
/* bn.js Not a pure module */
