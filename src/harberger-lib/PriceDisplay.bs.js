// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as React from "react";
import * as RimbleUi from "rimble-ui";
import * as Belt_Float from "bs-platform/lib/es6/belt_Float.js";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as Eth$WildCards from "./Eth.bs.js";
import * as Styles$WildCards from "../Styles.bs.js";
import * as Globals$WildCards from "./Globals.bs.js";
import * as QlHooks$WildCards from "./QlHooks.bs.js";
import * as UsdPriceProvider$WildCards from "./components/UsdPriceProvider.bs.js";

function priceWeiToTuple(wei, optCurrentUsdEthPrice) {
  var totalPatronageEth = Eth$WildCards.toFixedWithPrecisionNoTrailingZeros(undefined, wei);
  var optTotaPatronageUsd = Belt_Option.map(optCurrentUsdEthPrice, (function (currentUsdEthPrice) {
          return Globals$WildCards.toFixedWithPrecisionNoTrailingZeros(Globals$WildCards.mapd(Belt_Float.fromString(totalPatronageEth), 0, (function (a) {
                            return a;
                          })) * currentUsdEthPrice, 2);
        }));
  return /* tuple */[
          totalPatronageEth,
          optTotaPatronageUsd
        ];
}

function usePrice(chain, animal) {
  var optPriceWei = QlHooks$WildCards.usePrice(chain, animal);
  var optCurrentUsdEthPrice = UsdPriceProvider$WildCards.useUsdPrice(undefined);
  if (typeof optPriceWei === "number") {
    return ;
  } else if (optPriceWei.tag) {
    return priceWeiToTuple(optPriceWei[0], optCurrentUsdEthPrice);
  } else {
    return /* tuple */[
            "0",
            "0"
          ];
  }
}

function PriceDisplay$PurePriceDisplay(Props) {
  var priceEth = Props.priceEth;
  var optPriceUsd = Props.optPriceUsd;
  return React.createElement(React.Fragment, undefined, React.createElement("p", {
                  className: Styles$WildCards.noMarginTop + (" " + Styles$WildCards.noMarginBottom)
                }, Globals$WildCards.restr(priceEth + " ETH")), optPriceUsd !== undefined ? React.createElement("p", {
                    className: Styles$WildCards.noMarginTop
                  }, React.createElement("small", undefined, Globals$WildCards.restr("(" + (optPriceUsd + " USD)")))) : null);
}

var PurePriceDisplay = {
  make: PriceDisplay$PurePriceDisplay
};

function PriceDisplay(Props) {
  var chain = Props.chain;
  var animal = Props.animal;
  var optCurrentPrice = usePrice(chain, animal);
  if (optCurrentPrice !== undefined) {
    return React.createElement(PriceDisplay$PurePriceDisplay, {
                priceEth: optCurrentPrice[0],
                optPriceUsd: optCurrentPrice[1]
              });
  } else {
    return React.createElement(RimbleUi.Loader, { });
  }
}

var make = PriceDisplay;

export {
  priceWeiToTuple ,
  usePrice ,
  PurePriceDisplay ,
  make ,
  
}
/* react Not a pure module */
